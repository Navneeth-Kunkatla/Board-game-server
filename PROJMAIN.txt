#include<fstream.h>
#include<dos.h>
#include<stdio.h>
#include<time.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>
#include<graphics.h>
class player
{
	public:
	int pcode;
	char pna[25];
}p;
void pass()
{
clrscr();
char p[50],no[51];
  int i=0;
 int a=3;
 textbackground(YELLOW);
cout<<"\n\n\t\t\tC++ PROJECT";
  cout<<"\n\n\n\n\n\n\n\n\n\t\t\tENTER NAME:";
  gets(no);
   if(strcmpi(no,"Password")==0||strcmpi(no,"UsingLogic")==0||strcmpi(no,"bHARTISGAY")==0||strcmpi(no,"Super")==0)
 {
	cout<<"\n\t\t\tENTER THE PASSWORD:";
  while(1)
  {
	 p[i]=getch();
	 if(p[i]==13)
	 break;
	 cout<<"*";
	 i++; }
	 p[i]='\0';
	 if(strcmp(p,"bhagay")==0)
	 getch();
	 else
	 { cout<<"\n\t\t\tINVALID PASSCODE";
	 getch();
	 exit(0);

	   }}
	 else
	 {
	 cout<<"\t\t\tWRONG USER ID\t";
	 getch();
	 exit(0);
	 }
	 getch();
	 clrscr();
}

////////////////////////////////////////////////////////////////////////////
//THE LOADING SCREEN FUNCTION
////////////////////////////////////////////////////////////////////////////

void load()
{
 clrscr();

	 for(int i=1;i<=50;i++)

	  { clrscr();

	  cout<<"\n\n\n\n\t\t\t\t   Loading "<<'\n'<<'\t'<<'\t';

	 for(int j=1;j<=i;j++)

	  cout<<"=";

	  cout<<"\n\n\t "<<2*i<<"%";

	 if( i > 1 && i < 20)

	  cout<<"\n\n\tCreating Temporary files";

	 else if( i > 20 && i<40)

	  cout<<"\n\n\tAccessing Main Memory";

	 else if(i >40 && i<48)

	  cout<<"\n\n\tAccessing Cache";

	 else cout<<"\n\n\tComplete. Press Enter to Continue ";

	  delay(150 - i*3);

	}

getch();
}

void addrecord()
{
	cout<<"Enter player code\n";
	cin>>p.pcode;
	cout<<"\nEnter playername\n";
	gets(p.pna);
}
void displayrecord()
{
	cout<<"\n"<<p.pcode<<"\t\t\t"<<p.pna<<"\t\t\t"<<endl;
}
void addfile()
{
	char ch='Y';
	fstream x;
	x.open("player.dat",ios::out|ios::binary);
	while(ch=='Y')
	{
		addrecord();
		x.write((char*)&p,sizeof(p));
		cout<<"\nAny more records?(Y/N)\n";
		cin>>ch;
	}
	x.close();
}
void displayfile()
{
	fstream x;
	x.open("player.dat",ios::in|ios::binary);
	if(!x)
		cout<<"\nFile does not exist\n";
	else
	{
		cout<<"\nPlayer code:\t\tPlayer name:"<<endl;
		while(x.read((char*)&p,sizeof(p)))
			displayrecord();
	}
	x.close();
}
void modify()
{
	int c,i=0,r=0;
	fstream x;
	x.open("player.dat",ios::in|ios::out|ios::binary);
	if(!x)
		cout<<"\nFile does not exist"<<endl;
	else
	{
		cout<<"\nEnter player code to be modified\n";
		cin>>c;
		while(x.read((char*)&p,sizeof(p)))
		{
			r++;
			if(p.pcode==c)
			{
				i++;
				cout<<"\nEnter new values:\n";
				addrecord();
				x.seekp((r-1)*sizeof(p),ios::beg);
				x.write((char*)&p,sizeof(p));
			}
		}
	}
	x.close();
	if(i==0)
		cout<<"\nRecord does not exist";
	else
		cout<<"\nRecord has been updated";
}

char square[10] = {'o','1','2','3','4','5','6','7','8','9'};

int checkwin();
void board();


/*********************************************

	FUNCTION TO RETURN GAME STATUS
	1 FOR GAME IS OVER WITH RESULT
	-1 FOR GAME IS IN PROGRESS
	O GAME IS OVER AND NO RESULT
**********************************************/

int checkwin()
{
	if (square[1] == square[2] && square[2] == square[3])

		return 1;

	else if (square[4] == square[5] && square[5] == square[6])

		return 1;

	else if (square[7] == square[8] && square[8] == square[9])

		return 1;

	else if (square[1] == square[4] && square[4] == square[7])

		return 1;

	else if (square[2] == square[5] && square[5] == square[8])

		return 1;

	else if (square[3] == square[6] && square[6] == square[9])

		return 1;

	else if (square[1] == square[5] && square[5] == square[9])

		return 1;

	else if (square[3] == square[5] && square[5] == square[7])

		return 1;

	else if (square[1] != '1' && square[2] != '2' && square[3] != '3'
					&& square[4] != '4' && square[5] != '5' && square[6] != '6'
				  && square[7] != '7' && square[8] != '8' && square[9] != '9')

		return 0;

	else
		return -1;
}


/*******************************************************************
	 FUNCTION TO DRAW BOARD OF TIC TAC TOE WITH PLAYERS MARK
********************************************************************/


void board()
{
	clrscr();
	cout << "\n\n\tTic Tac Toe\n\n";

	cout << "Player 1 (X)  -  Player 2 (O)" << endl << endl;
	cout << endl;

	cout << "     |     |     " << endl;
	cout << "  " << square[1] << "  |  " << square[2] << "  |  " << square[3] << endl;

	cout << "_____|_____|_____" << endl;



	cout << "     |     |     " << endl;

	cout << "  " << square[4] << "  |  " << square[5] << "  |  " << square[6] << endl;

	cout << "_____|_____|_____" << endl;
	cout << "     |     |     " << endl;

	cout << "  " << square[7] << "  |  " << square[8] << "  |  " << square[9] << endl;

	cout << "     |     |     " << endl << endl;
}
void majong()
{
	clrscr();
	randomize();
	int f1=0,f2=0,f3=0,wins=0,turns=0,posa,posb,posc,posd,pose,posf,ch1,ch2;

	for(int j=0;;j++)
	{
		posa=random(6)+1;
		posb=random(6)+1;
		posc=random(6)+1;
		posd=random(6)+1;
		pose=random(6)+1;
		posf=random(6)+1;
		if(posa!=posb && posa!=posc && posa!=posd && posa!=pose && posa!=posf && posb!=posc && posb!=posd && posb!=pose && posb!=posf && posc!=posd &&posc!=pose && posc!=posf && posd!=pose && posd!=posf && pose!=posf)
			break;
	}
/*
	cout<<"posa="<<posa<<"\tposb="<<posb<<"\tposc="<<posc<<"\tposd="<<posd<<"\tpose="<<pose<<"\tposf="<<posf<<endl;
	cout<<"a&b correspond to 'Blue', c&d correspond to 'Green' and e&f correspond to 'Red'\n";         */
	for(int i=0;;i++)
	{
		cout<<"\n------------------------------------------\n";
			cout<<"1\t2\t3\t4\t5\t6\n";
		cout<<"Enter 1st position to be revealed\n";
		cin>>ch1;
		cout<<"\nEnter 2nd position to be revealed\n";
		cin>>ch2;
		if(posa==1 || posb==1)
			if(f1==1)
			{
				cout<<"\t";
				goto end1;
			}
		if(posc==1 || posd==1)
			if(f2==1)
			{
				cout<<"\t";
				goto end1;
			}
		if(pose==1 || posf==1)
			if(f3==1)
			{
				cout<<"\t";
				goto end1;
			}
		if(ch1==1 || ch2==1)
		{
			if(posa==1 || posb==1)
				if(f1==1)
					break;
			if(posc==1 || posd==1)
				if(f2==1)
					break;
			if(pose==1 || posf==1)
				if(f3==1)
					break;
			if(posa==1 || posb==1)
			{
				cout<<"Blue\t";
			}
			if(posc==1 || posd==1)
			{
				cout<<"Green\t";
			}
			if(pose==1 || posf==1)
			{
				cout<<"Red\t";
			}
		}
		else
			cout<<"1\t";
		end1:
		if(posa==2 || posb==2)
			if(f1==1)
			{
				cout<<"\t";
				goto end2;
			}
		if(posc==2 || posd==2)
			if(f2==1)
			{
				cout<<"\t";
				goto end2;
			}
		if(pose==2 || posf==2)
			if(f3==1)
			{
				cout<<"\t";
				goto end2;
			}
		if(ch1==2 || ch2==2)
		{
			if(posa==2 || posb==2)
				if(f1==1)
					break;
			if(posc==2 || posd==2)
				if(f2==1)
					break;
			if(pose==2 || posf==2)
				if(f3==1)
					break;
			if(posa==2 || posb==2)
			{
				cout<<"Blue\t";
			}
			if(posc==2 || posd==2)
			{
				cout<<"Green\t";
			}
			if(pose==2 || posf==2)
			{
				cout<<"Red\t";
			}
		}
		else
			cout<<"2\t";
		end2:
		if(posa==3 || posb==3)
			if(f1==1)
			{
				cout<<"\t";
				goto end3;
			}
		if(posc==3 || posd==3)
			if(f2==1)
			{
				cout<<"\t";
				goto end3;
			}
		if(pose==3 || posf==3)
			if(f3==1)
			{
				cout<<"\t";
				goto  end3;
			}
		if(ch1==3 || ch2==3)
		{
			if(posa==3 || posb==3)
				if(f1==1)
					break;
			if(posc==3 || posd==3)
				if(f2==1)
					break;
			if(pose==3 || posf==3)
				if(f3==1)
					break;
			if(posa==3 || posb==3)
			{
				cout<<"Blue\t";
			}
			if(posc==3 || posd==3)
			{
				cout<<"Green\t";
			}
			if(pose==3 || posf==3)
			{
				cout<<"Red\t";
			}
		}
		else
			cout<<"3\t";
		end3:
		if(posa==4 || posb==4)
			if(f1==1)
			{
				cout<<"\t";
				goto end4;
			}
		if(posc==4 || posd==4)
			if(f2==1)
			{
				cout<<"\t";
				goto end4;
			}
		if(pose==4 || posf==4)
			if(f3==1)
			{
				cout<<"\t";
				goto end4;
			}
		if(ch1==4 || ch2==4)
		{
			if(posa==4 || posb==4)
				if(f1==1)
					break;
			if(posc==4 || posd==4)
				if(f2==1)
					break;
			if(pose==4 || posf==4)
				if(f3==1)
					break;
			if(posa==4 || posb==4)
			{
				cout<<"Blue\t";
			}
			if(posc==4 || posd==4)
			{
				cout<<"Green\t";
			}
			if(pose==4 || posf==4)
			{
				cout<<"Red\t";
			}
		}
		else
			cout<<"4\t";
		end4:
		if(posa==5 || posb==5)
			if(f1==1)
			{
				cout<<"\t";
				goto end5;
			}
		if(posc==5 || posd==5)
			if(f2==1)
			{
				cout<<"\t";
				goto end5;
			}
		if(pose==5 || posf==5)
			if(f3==1)
			{
				cout<<"\t";
				goto end5;
			}
		if(ch1==5 || ch2==5)
		{
			if(posa==5 || posb==5)
				if(f1==1)
					break;
			if(posc==5 || posd==5)
				if(f2==1)
					break;
			if(pose==5 || posf==5)
				if(f3==1)
					break;
			if(posa==5 || posb==5)
			{
				cout<<"Blue\t";
			}
			if(posc==5 || posd==5)
			{
				cout<<"Green\t";
			}
			if(pose==5 || posf==5)
			{
				cout<<"Red\t";
			}
		}
		else
			cout<<"5\t";
		end5:
		if(posa==6 || posb==6)
			if(f1==1)
			{
				cout<<"\t";
				goto end6;
			}
		if(posc==6 || posd==6)
			if(f2==1)
			{
				cout<<"\t";
				goto end6;
			}
		if(pose==6 || posf==6)
			if(f3==1)
			{
				cout<<"\t";
				goto end6;
			}
		if(ch1==6 || ch2==6)
		{
			if(posa==6 || posb==6)
				if(f1==1)
					break;
			if(posc==6 || posd==6)
				if(f2==1)
					break;
			if(pose==6 || posf==6)
				if(f3==1)
					break;
			if(posa==6 || posb==6)
			{
				cout<<"Blue\t";
			}
			if(posc==6 || posd==6)
			{
				cout<<"Green\t";
			}
			if(pose==6 || posf==6)
			{
				cout<<"Red\t";
			}
		}
		else
			cout<<"6\t";
		end6:
		if((ch1==posa && ch2==posb) || (ch1==posb && ch2 ==posa))
		{
			f1=1;
			wins++;
		}
		if((ch1==posc && ch2==posd) || (ch1==posd && ch2==posc))
		{
			f2=1;
			wins++;
		}
		if((ch1==pose && ch2==posf) || (ch1==posf && ch2==pose))
		{
			f3=1;
			wins++;
		}
		turns++;
		if(wins==3)
		{
			cout<<"\n\nCongratulations, you won in "<<turns<<" turns";
			break;
		}
		cout<<"\n\nPress any key to continue\n";
		getch();
		clrscr();
	}
getch();
}
void cb()
{
 clrscr();
 int a, b, c, p, q, r,t=0,input;
Retry:
a=random(10);
b=random(10);
c=random(10);
if(a!=b && b!=c && c!=a && a!=0)
{
/*cout<<a<<b<<c; */
for(int i=0;i<50;i++)
{
 t++;
 int k=0,n=0;
 cout<<"\n-------------------------------\n";
 cout<<"ENTER YOUR CHOICE"<<endl;
 cout<<"1.PLAY"<<endl;
 cout<<"2.QUIT"<<endl;
 int ch;
 cin>>ch;
 switch(ch)
 {
  case 1:
	   cout<<"ENTER A 3 DIGIT NUMBER "<<endl;
	   cin>>input;
	   p=input/100;
	   q=(input/10)%10;
	   r=input%10;
	   if(a==p)
	   n++;
	   if(b==q)
	   n++;
	   if(c==r)
	   n++;
	   if(a==q)
	   k++;
	   if(a==r)
	   k++;
	   if(b==p)
	   k++;
	   if(b==r)
	   k++;
	   if(c==p)
	   k++;
	   if(c==q)
	   k++;
	   cout<<"NUMBER OF COWS:"<<k<<endl;
	   cout<<"NUMBER OF BULL:"<<n<<endl;
	   break;
  case 2:
	break;

  default:
	cout<<"Invalid choice";
  }
 if(ch==2)
 {
 cout<<"\nThe number was "<<a<<b<<c<<endl;
 getch();
 break;
 }
 if(n==3)
 {
 cout<<"Congratulations!!!You won in "<<t<<" turns"<<endl;
 break;
 }
 }
 }
 else
 goto Retry;
 getch();
 }

void main()
{
	clrscr();
	textcolor(BLACK);
	textbackground(WHITE);
   int ch1,ch2,k=0;
	load();
	pass();

        cout<<"WELCOME"<<endl;
        cout<<"ENTER YOUR CHOICE"<<endl; 
	cout<<"1.ENTER"<<endl;
	cout<<"2.HELP"<<endl;
	if(ch==2)
	{
	int helpch;
	cout<<"ENTER CHOICE OF GAME"<<endl;
	cout<<"1.TIC TAC TOE"<<endl; 
	cout<<"2.MAJONG"<<endl;
	cout<<"3.COWS AND BULLS"<<endl;
	if(helpch==1)
	{
	cout<<"\t\tRULES FOR TIC TAC TOE"<<endl;
	cout<<"\t\t---------------------"<<endl;
	cout<<"IT IS A TWO PLAYER GAME"<<endl;
	cout<<"GET 3 CONSECUTIVE SQUARES IN A ROW (VERTICALLY, HORIONTALLY OR DIAGONALLY) TO WIN"<<endl;
	cout<<"THE FIRST TURN IS PLAYER1(X) AND THEY CAN CHOOSE A POSITION IN THE 3*3 GRID "<<endl;
	cout<<"THE SECOND TURN IS PLAYER2(O) AND THEY CAN CHOOSE A POSITION IN THE 3*3 GRID"<<endl;
	cout<<"THIS WILL CONTINUE TILL EITHER OF THE PLAYER WINS"<<endl;
	cout<<"ALL THE BEST!!!"<<endl;
	}
	else if(helpch==2)
	{
	cout<<"\t\tRULES FOR MAJONG"<<endl;
	cout<<"\t\t----------------"<<endl;
	cout<<"THERE ARE A FEW NUMBERS DISPLAYED TO THE PLAYER."<<endl;
	cout<<"ENTER TWO NUMBERS AT A TIME TO REVEAL THEIR COLORS."<<endl;
	cout<<"IF THE COLORS MATCH, THEN THEY ARE REMOVED."<<endl;
	cout<<"IF THE COLORS DO NOT MATCH, THEN THEY WILL BE SHIFTED BACK TO THEIR RESPECTIVE NUMBER FORM"<<endl;
	cout<<"KEEP MATCHING NUMBERS TO CLEAR ALL NUMBERS IN THE LEAST NUMBER OF TURNS"<<endl;
	cout<<"ALL THE BEST!!!"<<endl;
	}
	else if(helpch==3)
	{
	cout<<"\t\tRULES FOR COWS AND BULLS"<<endl;
	cout<<"\t\t------------------------"<<endl;
	cout<<"ENTER A THREE DIGIT NUMBER"<<endl;
	cout<<"IF ANY NUMBER OF THE THREE DIGIT IS CORRECT BUT NOT IN ITS CORRECT POSITION THEN IS A COW"<<endl;
	cout<<"IF ANY NUMBER OF THE THREE DIGIT IS CORRECT AND IS IN ITS CORRECT POSITION THEN IT IS A BULL "<<endl;
	cout<<"GET THREE BULLS OR THE CORRECT NUMBER TO BE GUESSED TO WIN IN THE LEAST NUMBER OF TURNS"<<endl;
	cout<<"ALL THE BEST!!!"<<endl;
	}
	else
	cout<<"INVALID CHIOCE!! \nENTER RIGHT CHOICE"<<endl;
	}
	elseif(ch==1)
	{
	for(int i=0;;i++)
	{
		if(i!=0)
			clrscr();
		cout<<"\nMENU\n";
		cout<<"----"<<endl;
		cout<<"\n1.Add\n2.Display\n3.Modify\n4.Play\n5.Exit\n";
		cout<<"\nEnter your choice\n";
		cin>>ch1;
		clrscr();
		if(ch1==4)
		{
			cout<<"\nMENU\n";
			cout<<"----"<<endl;
			cout<<"\n1.Tic Tac Toe\n2.Majong\n3.Cows and Bulls\n";
			cout<<"\nEnter your choice\n";
			cin>>ch2;
			switch(ch2)
			{

				case 1:
					int player = 1,i,choice;
		if(k!=0)
				{
					square[0]='o';
					square[1]='1';
					square[2]='2';
					square[3]='3';
					square[4]='4';
					square[5]='5';
					square[6]='6';
					square[7]='7';
					square[8]='8';
					square[9]='9';
					int checkwin();
					void board();
				}
	char mark;
	do
	{
		board();
		player=(player%2)?1:2;

		cout << "Player " << player << ", enter a number:  ";
		cin >> choice;

		mark=(player == 1) ? 'X' : 'O';

		if (choice == 1 && square[1] == '1')

			square[1] = mark;
		else if (choice == 2 && square[2] == '2')

			square[2] = mark;
		else if (choice == 3 && square[3] == '3')

			square[3] = mark;
		else if (choice == 4 && square[4] == '4')

			square[4] = mark;
		else if (choice == 5 && square[5] == '5')

			square[5] = mark;
		else if (choice == 6 && square[6] == '6')

			square[6] = mark;
		else if (choice == 7 && square[7] == '7')

			square[7] = mark;
		else if (choice == 8 && square[8] == '8')

			square[8] = mark;
		else if (choice == 9 && square[9] == '9')

			square[9] = mark;
		else
		{
			cout<<"Invalid move ";

			player--;
			cin.ignore();
			cin.get();
		}
		i=checkwin();

		player++;
	}while(i==-1);
	board();
	if(i==1)

		cout<<"==>\aPlayer "<<--player<<" win ";
	else
		cout<<"==>\aGame draw";

	cin.ignore();
	cin.get();
	k++;
					break;
				case 2:
					majong();
					getch();
					clrscr();
					break;
				case 3:
					cb();
					getch();
					clrscr();
					break;
				default:
					cout<<"\nInvalid Choice\n";
			}
		}
		else
		{
					switch(ch1)
		{
			case 1:
				addfile();
				clrscr();
				break;
			case 2:
				displayfile();
				getch();
				clrscr();
				break;
			case 3:
				modify();
				getch();
				clrscr();
				break;
			case 5:
				exit(0);
				break;
			default:
				cout<<"\nInvalid choice"<<endl;
				getch();
				clrscr();
				break;
		}
	}
	
	getch();
}
}
}



